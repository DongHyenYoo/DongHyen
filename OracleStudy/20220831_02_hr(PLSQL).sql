SELECT USER
FROM DUAL;

SET SERVEROUTPUT ON;

--○ %TYPE

--1.특정 테이블에 포함되어 있는 컬럼의 자료형(데이터타입)을 참조하는 데이터타입

--2. 형식 및 구조
--변수명 테이블명.컬럼명%TYPE [:= 초기값];

--○ HR.EMPLOYEES 테이블의 특정데이터를 변수에 저장

SELECT *
FROM EMPLOYEES;

--이름(FIRST_NAME) 컬럼 확인

DECLARE
    V_NAME VARCHAR2(20);
BEGIN
    SELECT FIRST_NAME INTO V_NAME
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID=103;
    
    DBMS_OUTPUT.PUT_LINE(V_NAME);
END;

DECLARE
    --V_NAME VARCHAR2(20);
    V_NAME EMPLOYEES.FIRST_NAME%TYPE; --자동으로 맞는 자료형을 가질수 있게함 
BEGIN
    SELECT FIRST_NAME INTO V_NAME
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID=103;
    
    DBMS_OUTPUT.PUT_LINE(V_NAME);
END;

--○EMPLOYEES 테이블을 대상으로 108번 사원(Nancy)의
-- SALARY를 변수에 담아 출력하는 PL/SQL 구문을 작성한다.

DECLARE
    EMP_SALARY EMPLOYEES.SALARY%TYPE;
BEGIN
    SELECT SALARY INTO EMP_SALARY
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = 108;
    
    DBMS_OUTPUT.PUT_LINE(EMP_SALARY);
    
END;

--○EMPLOYEES 테이블의 특정 레코드 항목 여러개를 변수에 저장
-- 103번 사원의 FIRST_NAME, PHONE_NUMBER, EMAIL 항목을 변수에 저장하여 출력

DECLARE
    EMP_FNAME EMPLOYEES.FIRST_NAME%TYPE;
    EMP_PHONE EMPLOYEES.PHONE_NUMBER%TYPE;
    EMP_EMAIL EMPLOYEES.EMAIL%TYPE;
BEGIN
    SELECT FIRST_NAME , PHONE_NUMBER , EMAIL
            INTO EMP_FNAME, EMP_PHONE, EMP_EMAIL
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = 103;
    
    DBMS_OUTPUT.PUT_LINE(EMP_FNAME || ',  ' || EMP_PHONE || ',   ' || EMP_EMAIL);
END;



--○ %ROWTYPE

--1.테이블의 레코드와 같은 구조의 구조체 변수를 선언(여러 개의 컬럼)

--2.형식 및 구조
--변수명 테이블명%ROWTYPE;

DECLARE
    V_EMP   EMPLOYEES%ROWTYPE; --각 행이 가지는 모든 변수타입을 가진다.
BEGIN
    SELECT FIRST_NAME, PHONE_NUMBER, EMAIL 
            INTO V_EMP.FIRST_NAME, V_EMP.PHONE_NUMBER, V_EMP.EMAIL
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = 103;
    
    DBMS_OUTPUT.PUT_LINE(V_EMP.FIRST_NAME || ', ' || V_EMP.PHONE_NUMBER ||', '|| V_EMP.EMAIL);
END;
--==>>

--○EMPLOYEES 테이블의 전체 레코드 항목 여러개를 변수에 저장
-- 모든 사원의 FIRST_NAME, PHONE_NUMBER, EMAIL 항목을 변수에 저장하여 출력

DECLARE
    EMPNUM NUMBER;
    --NUM NUMBER;
    NUM EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
    SELECT COUNT(*) INTO EMPNUM
    FROM EMPLOYEES;
    
    FOR NUM IN 100..(99+EMPNUM) LOOP --FOR 시작
    
    DECLARE --내부 D-B-E 시작
    EMP EMPLOYEES%ROWTYPE; 
    BEGIN
    SELECT FIRST_NAME , PHONE_NUMBER, EMAIL
    INTO EMP.FIRST_NAME, EMP.PHONE_NUMBER, EMP.EMAIL
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = NUM;
    
    DBMS_OUTPUT.PUT_LINE(EMP.FIRST_NAME ||',   ' || EMP.PHONE_NUMBER|| ',     ' || EMP.EMAIL);
    END; --내부 D-B-E 끝
    END LOOP; --FOR문 끝
        
END;
