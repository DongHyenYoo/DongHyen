/* do while문은 while문가 마찬가지로
   특정한 영역을 반복 수행한느 반복문
    다만 조건식에 대한 검사를 반복문을 수행한 이후에 한다는것
     이와 같은 성격으로 인해 반드시 한 번은 수행하게 되는 특징을 갖는다.

     형식 과 구조
     do
     {
     실행문;
     }
     while(조건식);
     */

public class Test055
{
	public static void main(String[] args){


	//while 반복문을 통해 구현했던 내용들을
	//do - while 문을통해서도 구현할 수 있다.

/*
	int n = 1;

	do
	{

		System.out.println("n :"+n);
		n++;
	}
	while(n<=10);  // 반복문에서 n이 2로 시작할뿐 다른건 없다.
*/

/*
	int n = 1;

	do
	{
		n++;
		System.out.println("n=" + n);
	}
	while (n<10);

	*/

/*
	int n = 0;

	do
	{
		
		System.out.println("n=" + ++n);
	}
	while (n<=10); //반복문을처음에 한두바퀴 돌아보고 어디까지 돌겠구나하면서 마지막부분 한두바퀴 돌아보면 된다.
	*/

	// 그럼대체 왜 while이 있는데 do while문이 있는지?
	//do while문은 보통 사용하는 모델이 정해져있다.

	//ex 특정 범위의 정수가 임력될 때 까지
	//입력받는 행위 자체를 반복해서 수행해야 하는 상황이라 가정

	//즉,최소 한번은 사용자의 입력값을 받아오는 처리를 수행해야
	//원하는 범위의 값을 제대로 입력했는지 확인할 수 있고
	//이로 인해 반복을 추가로 수행할지 말지의 여부를 결정할 수 있는 상황이다.

	//짝수를 입력하세요 : 1
	//짝수를 입력하세요 : 7 (짝수를 입력할때 까지 반복)
	//짝수를 입력하세요 : 4(이제 멈춤)
	//사용자한테 값을 받아오는 행위를 반복해서 수행한것
	//즉 적어도 한번은 값을 입력받아라(한번 입력받아 내가 필요한 값인지 아닌지 판단할수있게 하는것)
    //ex) 
	//while(사용자가 입력한 값이 홀수)
	java.util.Scanner sc = new java.util.Scanner(System.in);

	int num;

	do
	{
		System.out.print("100이상의 정수를 입력하세요");

		num = sc.nextInt();
	}
	while (num<100);

	System.out.print("100이상의 정수");

		
		/*
		100이상의 정수를 입력하세요5
100이상의 정수를 입력하세요2
100이상의 정수를 입력하세요4
100이상의 정수를 입력하세요101
100이상의 정수계속하려면 아무 키나 누르십시오 . . .
*/

	}

}