/*===================================
배열
-배열의 복사 (주소값 복사)-깊복
================================*/
//097과 비교


//배열 변수의 복사에는 데이터 복사, 주소값 복수 두가지 형태가 존재
// 주소값 복사 -> 얕은 복사
// 원본을 수정하면 복사본에 영향을 미치게 되는 복사
// (자바의 배열 뿐 아니라 모든 참조형 데이터에 해당하는 복사방법)

//데이터 복사 -> 깊은 복사
//실제 요소로 들어있는 값에 대한 복사로
// 원본을 수정해도 복사본에 영향을 끼치지 않는 복사 방법



public class Test096
{
	public static void main(String[] args)
	{

		int nums[] = {10,20,30,40,50};
		int[] copys;

		int temp;

		copys = nums;				//복사! 변수를 대입시키는 건과 같다.

		temp = nums[0];				//temp = 10;

		//원본 배열의 데이터 수정

		nums[0] = 1000;				//1000 20 30 40 50

		for(int i=0;i<copys.length;i++)
			System.out.printf("%4d",copys[i]);

		System.out.println();

		//copys를 건드린 적이 없는데 1000  20  30  40  50이나온다.

		System.out.printf("%4d",temp);
		//temp는 10이 나온다.

		//이유는 copys = nums 하게되면 값을 복사하는것이 아니라
		//기존 배열이 참조하고 있는 값의 주소의 주소값을 복사하게 되고 
		//진짜 메모리 안에들어있는값을 바꾸면 같이 바뀌게 되는것
		
		//그럼 temp는? 자료형이기에 별도의 공간을 만들어 놓고 주소가 아닌 값을 넣어놓는다.
		//int string char 등등의 자료형

		//객체와 배열은 참조타입으로 이름을 따라가보면 값이아닌 주소가 있다.



		

		

	}

}