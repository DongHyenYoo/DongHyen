
SELECT *
FROM USER_CONSTRAINTS;

DROP TABLE TBL_MEMBERLIST

PURGE RECYCLEBIN

CREATE TABLE MEMBERLIST
(ID     VARCHAR2(20)
,PW     VARCHAR2(20)
,NAME   VARCHAR2(50)
,TEL    VARCHAR2(50)
,EMAIL  VARCHAR2(100)
,CONSTRAINT MEMBERLIST_ID_PK PRIMARY KEY(ID)
);
--==>>Table MEMBERLIST이(가) 생성되었습니다.

SELECT *
FROM MEMBERLIST;

--○ MEMBERLIST  데이터 입력
INSERT INTO MEMBERLIST(ID, PW, NAME, TEL, EMAIL)
VALUES ('superman', CRYPTPACK.ENCRYPT('1234567','1234567'),'김태민','010-1111-1111','ktm@test.com');
--==>>1 행 이(가) 삽입되었습니다.


INSERT INTO MEMBERLIST(ID, PW, NAME, TEL, EMAIL)
VALUES ('superwoman', CRYPTPACK.ENCRYPT('java002$','java002$'),'정미경','010-2222-2222','jmk@test.com');
--==>>1 행 이(가) 삽입되었습니다.


--○ MEMBERRECORD 테이블 생성
CREATE TABLE MEMBERRECORD
( SCOREID       NUMBER
, KOR           NUMBER(3)
, ENG           NUMBER(3)
, MAT           NUMBER(3)
, ID            VARCHAR2(20)
, CONSTRAINT MEMBERRECORD_SCOREID_PK PRIMARY KEY(ID)
, CONSTRAINT MEMBERRECORD_KOR_CK CHECK(KOR>=0 AND KOR<=100)
, CONSTRAINT MEMBERRECORD_ENG_CK CHECK(ENG>=0 AND ENG<=100)
, CONSTRAINT MEMBERRECORD_MAT_CK CHECK(MAT>=0 AND MAT<=100)
, CONSTRAINT MEMBERRECORD_ID_FK FOREIGN KEY(ID)
                REFERENCES MEMBERLIST(ID)
);


CREATE SEQUENCE MEMBERRECORDSEQ
NOCACHE;

--○ MEMBERRECORD 데이터 입력
INSERT INTO MEMBERRECORD(SCOREID, KOR, ENG, MAT, ID)
VALUES (MEMBERRECORDSEQ.NEXTVAL, 90, 80, 70 , 'superman');


SELECT *
FROM MEMBERRECORD;
--==>>1   90   80   70   superman


ALTER TABLE MEMBERLIST
ADD GRADE NUMBER(1) DEFAULT 1;

SELECT *
FROM MEMBERLIST;

UPDATE MEMBERLIST
SET GRADE = 0
WHERE NAME = '김태민'; --태민이 관리자


--학생 데이터 입력
INSERT INTO MEMBERLIST(ID, PW, NAME, TEL, EMAIL) VALUES ('superwoman', CRYPTPACK.ENCRYPT('java002$','java002$'),'정미경','010-2222-2222','jmk@test.com')
;

--학생 데이터 조회 입력
SELECT ID, NAME, TEL, EMAIL FROM MEMBERLIST
;

-- 특정 학생 데이터 조회(성적 입력시)
SELECT ID, NAME, TEL, EMAIL FROM MEMBERLIST
;


-- 학생 정보 수정
UPDATE MEMBERLIST SET NAME='미경정', TEL='010-2222-4444', EMAIL='' WHERE ID = 'superwoman' 
;


DELETE FROM MEMBERLIST WHERE ID='super';

--학생 ID, 이름, 점수 출력 동명이인일수도 있으므로 ID로 걸러야 할듯
CREATE OR REPLACE VIEW MEMBERVIEW
AS
SELECT R.SCOREID , L.ID, L.NAME, R.KOR, R.ENG, R.MAT
FROM MEMBERLIST L JOIN MEMBERRECORD R
ON L.ID = R.ID;





--학생 성적 데이터 조회
SELECT SCOREID, ID, NAME, KOR, ENG, MAT FROM MEMBERVIEW
;



--○ MEMBERRECORD 데이터 입력 한줄
INSERT INTO MEMBERRECORD(SCOREID, KOR, ENG, MAT, ID VALUES (MEMBERRECORDSEQ.NEXTVAL, 90, 80, 70 , 'superman')
;

SELECT SCOREID, KOR, ENG, MAT, ID FROM MEMBERRECORD WHERE SCOREID=2;
--성적 수정
UPDATE MEMBERRECORD SET KOR = 80 WHERE SCOREID='superman'
;

--성적 삭제
DELETE FROM MEMBERRECORD WHERE ID=?

Commit;